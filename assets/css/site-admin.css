.editor-styles-wrapper {
  /*
    DENIFIRE variables
*/
  /* roboto-condensed-regular - latin_cyrillic */
  /* roboto-condensed-700 - latin_cyrillic */
  /* roboto-condensed-300 - latin_cyrillic */
  /* roboto-regular - latin_cyrillic-ext */
  /* roboto-700 - latin_cyrillic-ext */
  /**
 * Strips the unit from a given number-unit-combination and returns the number.
 * @link: http://stackoverflow.com/a/12335841/1779999
 * @usage: parse-int(10px) => 10
 */
  /**
 * Simply adds the em unit to a given number. This is used twice in the
 * function underneath, thus the need for a separate function.
 */
  /**
 * Calculates em values for a given list of (px or em) values and a given em
 * base. Multiply base values for nested em structures (last @usage example).
 * @usage: em(10px, 1.125) => .55556em
 *         em(24px, .875em) => 1.71429em
 *         em(12px 0 7em rgba(0, 0, 0, .7), 1.75) => .42857em 0 4em rgba(0, 0, 0, 0.7)
 *         em(12px) + em(3em) => 3.75em
 *         em(23px, em(53px)) => .43396em
 *         em(24px, 1.5 * 1.125) => .88889em
 */
  /**
 * Color palette.
 *
 * @see resources/styles/shared/_variables.scss
 */
  /**
 * Font sizes.
 *
 * @see resources/styles/shared/_variables.scss
 */ }
  .editor-styles-wrapper :where(.wp-block) {
    max-width: 1200px; }
  .editor-styles-wrapper .block-editor-block-list__layout.is-root-container > .wp-block[data-align=full] {
    max-width: none; }

@font-face {
  .editor-styles-wrapper {
    font-family: 'Roboto Condensed';
    font-style: normal;
    font-weight: 400;
    src: url("/wp-content/themes/denifire/assets/fonts/Robotocondensed/roboto-condensed-v19-latin_cyrillic-regular.eot");
    /* IE9 Compat Modes */
    src: local(""), url("/wp-content/themes/denifire/assets/fonts/Robotocondensed/roboto-condensed-v19-latin_cyrillic-regular.eot?#iefix") format("embedded-opentype"), url("/wp-content/themes/denifire/assets/fonts/Robotocondensed/roboto-condensed-v19-latin_cyrillic-regular.woff2") format("woff2"), url("/wp-content/themes/denifire/assets/fonts/Robotocondensed/roboto-condensed-v19-latin_cyrillic-regular.woff") format("woff"), url("/wp-content/themes/denifire/assets/fonts/Robotocondensed/roboto-condensed-v19-latin_cyrillic-regular.ttf") format("truetype"), url("/wp-content/themes/denifire/assets/fonts/Robotocondensed/roboto-condensed-v19-latin_cyrillic-regular.svg#RobotoCondensed") format("svg");
    /* Legacy iOS */ } }

@font-face {
  .editor-styles-wrapper {
    font-family: 'Roboto Condensed';
    font-style: normal;
    font-weight: 700;
    src: url("/wp-content/themes/denifire/assets/fonts/Robotocondensed/roboto-condensed-v19-latin_cyrillic-700.eot");
    /* IE9 Compat Modes */
    src: local(""), url("/wp-content/themes/denifire/assets/fonts/Robotocondensed/roboto-condensed-v19-latin_cyrillic-700.eot?#iefix") format("embedded-opentype"), url("/wp-content/themes/denifire/assets/fonts/Robotocondensed/roboto-condensed-v19-latin_cyrillic-700.woff2") format("woff2"), url("/wp-content/themes/denifire/assets/fonts/Robotocondensed/roboto-condensed-v19-latin_cyrillic-700.woff") format("woff"), url("/wp-content/themes/denifire/assets/fonts/Robotocondensed/roboto-condensed-v19-latin_cyrillic-700.ttf") format("truetype"), url("/wp-content/themes/denifire/assets/fonts/Robotocondensed/roboto-condensed-v19-latin_cyrillic-700.svg#RobotoCondensed") format("svg");
    /* Legacy iOS */ } }

@font-face {
  .editor-styles-wrapper {
    font-family: 'Roboto Condensed';
    font-style: normal;
    font-weight: 300;
    src: url("/wp-content/themes/denifire/assets/fonts/Robotocondensed/roboto-condensed-v19-latin_cyrillic-300.eot");
    /* IE9 Compat Modes */
    src: local(""), url("/wp-content/themes/denifire/assets/fonts/Robotocondensed/roboto-condensed-v19-latin_cyrillic-300.eot?#iefix") format("embedded-opentype"), url("/wp-content/themes/denifire/assets/fonts/Robotocondensed/roboto-condensed-v19-latin_cyrillic-300.woff2") format("woff2"), url("/wp-content/themes/denifire/assets/fonts/Robotocondensed/roboto-condensed-v19-latin_cyrillic-300.woff") format("woff"), url("/wp-content/themes/denifire/assets/fonts/Robotocondensed/roboto-condensed-v19-latin_cyrillic-300.ttf") format("truetype"), url("/wp-content/themes/denifire/assets/fonts/Robotocondensed/roboto-condensed-v19-latin_cyrillic-300.svg#RobotoCondensed") format("svg");
    /* Legacy iOS */ } }

@font-face {
  .editor-styles-wrapper {
    font-family: 'Roboto';
    font-style: normal;
    font-weight: 100;
    src: url("/wp-content/themes/denifire/assets/fonts/Roboto/roboto-v20-latin_cyrillic-ext-100.eot");
    /* IE9 Compat Modes */
    src: local(""), url("/wp-content/themes/denifire/assets/fonts/Roboto/roboto-v20-latin_cyrillic-ext-100.eot?#iefix") format("embedded-opentype"), url("/wp-content/themes/denifire/assets/fonts/Roboto/roboto-v20-latin_cyrillic-ext-100.woff2") format("woff2"), url("/wp-content/themes/denifire/assets/fonts/Roboto/roboto-v20-latin_cyrillic-ext-100.woff") format("woff"), url("/wp-content/themes/denifire/assets/fonts/Roboto/roboto-v20-latin_cyrillic-ext-100.ttf") format("truetype"), url("/wp-content/themes/denifire/assets/fonts/Roboto/roboto-v20-latin_cyrillic-ext-100.svg#Roboto") format("svg");
    /* Legacy iOS */ } }

@font-face {
  .editor-styles-wrapper {
    font-family: 'Roboto';
    font-style: normal;
    font-weight: 700;
    src: url("/wp-content/themes/denifire/assets/fonts/Roboto/roboto-v20-latin_cyrillic-ext-700.eot");
    /* IE9 Compat Modes */
    src: local(""), url("/wp-content/themes/denifire/assets/fonts/Roboto/roboto-v20-latin_cyrillic-ext-700.eot?#iefix") format("embedded-opentype"), url("/wp-content/themes/denifire/assets/fonts/Roboto/roboto-v20-latin_cyrillic-ext-700.woff2") format("woff2"), url("/wp-content/themes/denifire/assets/fonts/Roboto/roboto-v20-latin_cyrillic-ext-700.woff") format("woff"), url("/wp-content/themes/denifire/assets/fonts/Roboto/roboto-v20-latin_cyrillic-ext-700.ttf") format("truetype"), url("/wp-content/themes/denifire/assets/fonts/Roboto/roboto-v20-latin_cyrillic-ext-700.svg#Roboto") format("svg");
    /* Legacy iOS */ } }
  .editor-styles-wrapper html {
    -webkit-box-sizing: border-box;
            box-sizing: border-box; }
  .editor-styles-wrapper *,
  .editor-styles-wrapper *:before,
  .editor-styles-wrapper *:after {
    /* Inherit box-sizing to make it easier to change the property for components that leverage other behavior; see https://css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice/ */
    -webkit-box-sizing: inherit;
            box-sizing: inherit; }
  .editor-styles-wrapper ul, .editor-styles-wrapper ol {
    margin: 0; }
  .editor-styles-wrapper ul {
    list-style: none outside none; }
  .editor-styles-wrapper ol {
    list-style: decimal; }
  .editor-styles-wrapper li > ul,
  .editor-styles-wrapper li > ol {
    margin-bottom: 0;
    margin-left: .5em; }
  .editor-styles-wrapper dt {
    font-weight: bold; }
  .editor-styles-wrapper dd {
    margin: 0 1.5em 1.5em; }
  .editor-styles-wrapper table {
    margin: 0 0 1.5em;
    width: 100%; }
  .editor-styles-wrapper .table-wrapper {
    overflow-x: auto;
    margin: 0 0 20px;
    overflow-y: hidden; }
  .editor-styles-wrapper ul, .editor-styles-wrapper ol {
    margin: 0; }
  .editor-styles-wrapper ul {
    list-style: none outside none; }
  .editor-styles-wrapper ol {
    list-style: decimal; }
  .editor-styles-wrapper li > ul,
  .editor-styles-wrapper li > ol {
    margin-bottom: 0;
    margin-left: .5em; }
  .editor-styles-wrapper dt {
    font-weight: bold; }
  .editor-styles-wrapper dd {
    margin: 0 1.5em 1.5em; }
  .editor-styles-wrapper table {
    margin: 0 0 1.5em;
    width: 100%; }
  .editor-styles-wrapper .table-wrapper {
    overflow-x: auto;
    margin: 0 0 20px;
    overflow-y: hidden; }
  .editor-styles-wrapper .has-grey-text-color {
    color: #646464; }
  .editor-styles-wrapper .has-grey-text-background-color {
    background-color: #646464; }
  .editor-styles-wrapper .has-dark-grey-color {
    color: #333333; }
  .editor-styles-wrapper .has-dark-grey-background-color {
    background-color: #333333; }
  .editor-styles-wrapper .has-xs-font-size {
    font-size: 12px; }
  .editor-styles-wrapper .has-s-font-size {
    font-size: 16px; }
  .editor-styles-wrapper .has-m-font-size {
    font-size: 18px; }
  .editor-styles-wrapper .has-l-font-size {
    font-size: 26px; }
  .editor-styles-wrapper .has-xl-font-size {
    font-size: 42px; }
  .editor-styles-wrapper body .editor-styles-wrapper {
    /*
  color: $color__text-main;
  font-family: $font-famili-paragraph;
  */
    /*
  h1,h2,h3,h4,h5,h6 {
    font-family: Roboto, sans-serif;
    font-weight: bold;
    line-height: 1.4;
    color: $darkgrey;
    margin: 0;
  }
  h1{
    font-size: 28px;
  }

  h2{
    font-size: 20px;
  }

  h3{
    font-size: 18px;
  }

  h4{
    font-size: 16px;
  }

  h5,h6{
    font-size: 16px;
  }

  a{
    color: $blue;
    text-decoration: none;
  }

  p{
    font-size: em(14);
    margin: 0;
    @include bp(tablet){
      font-size: 1em;
    }
  }
  */ }
    .editor-styles-wrapper body .editor-styles-wrapper .wp-block[data-align=full] {
      max-width: none; }
  .editor-styles-wrapper .wp-block-cover.alignfull {
    padding: 0; }
    .editor-styles-wrapper .wp-block-cover.alignfull .wp-block-cover__inner-container {
      width: 100%; }
  .editor-styles-wrapper .is-style-red-button a {
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none; }
  .editor-styles-wrapper .is-style-red-button .wp-block-button__link {
    background-color: #E50A19;
    padding: 0; }
  .editor-styles-wrapper .wp-block-gallery.has-nested-images figure.wp-block-image img {
    max-width: 6.25rem !important; }
  .editor-styles-wrapper button,
  .editor-styles-wrapper input[type="button"],
  .editor-styles-wrapper input[type="reset"],
  .editor-styles-wrapper input[type="submit"] {
    border: 1px solid;
    border-color: #ccc #ccc #bbb;
    border-radius: 3px;
    background: #e6e6e6;
    color: rgba(0, 0, 0, 0.8);
    font-size: 12px;
    font-size: 0.75rem;
    line-height: 1;
    padding: .6em 1em .4em; }
    .editor-styles-wrapper button:hover,
    .editor-styles-wrapper input[type="button"]:hover,
    .editor-styles-wrapper input[type="reset"]:hover,
    .editor-styles-wrapper input[type="submit"]:hover {
      border-color: #ccc #bbb #aaa;
      background-color: #FF0011;
      text-decoration: none; }
    .editor-styles-wrapper button:active, .editor-styles-wrapper button:focus,
    .editor-styles-wrapper input[type="button"]:active,
    .editor-styles-wrapper input[type="button"]:focus,
    .editor-styles-wrapper input[type="reset"]:active,
    .editor-styles-wrapper input[type="reset"]:focus,
    .editor-styles-wrapper input[type="submit"]:active,
    .editor-styles-wrapper input[type="submit"]:focus {
      border-color: #aaa #bbb #bbb; }
  .editor-styles-wrapper .search-field {
    border-radius: 0 !important;
    padding-left: 21px !important;
    min-height: 46px !important;
    border: 0 !important; }
    @media (min-width: 768px) {
      .editor-styles-wrapper .search-field {
        min-width: 320px; } }
  .editor-styles-wrapper .red-button, .editor-styles-wrapper .red-button a, .editor-styles-wrapper input.red-button[type="submit"], .editor-styles-wrapper .is-style-red-button .wp-block-button__link, .editor-styles-wrapper .search-submit {
    -webkit-appearance: none;
       -moz-appearance: none;
            appearance: none;
    border: 0;
    background-color: #E50A19 !important;
    text-align: center;
    text-transform: uppercase;
    color: #fff !important;
    font-weight: bold;
    font-size: 1em;
    border-radius: 0;
    min-width: 240px;
    min-height: 46px;
    padding: 21px 30px 21px;
    -webkit-transition: 0.2s ease-out;
    transition: 0.2s ease-out; }
    .editor-styles-wrapper .red-button:hover, .editor-styles-wrapper .red-button a:hover, .editor-styles-wrapper input.red-button:hover[type="submit"], .editor-styles-wrapper .is-style-red-button .wp-block-button__link:hover, .editor-styles-wrapper .search-submit:hover {
      background-color: #FF0011 !important;
      text-decoration: none; }
    .editor-styles-wrapper .red-button.product__requestBtn, .editor-styles-wrapper .red-button a.product__requestBtn, .editor-styles-wrapper input.product__requestBtn.red-button[type="submit"], .editor-styles-wrapper .is-style-red-button .wp-block-button__link.product__requestBtn, .editor-styles-wrapper .search-submit.product__requestBtn {
      width: 100%;
      display: block; }
  .editor-styles-wrapper .search-form {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    margin-bottom: 1.875rem;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center; }
    .editor-styles-wrapper .search-form .search-submit {
      min-width: 8.6875rem;
      border-radius: 0;
      border: 0; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNpdGUtYWRtaW4uc2NzcyIsInZhcmlhYmxlcy9fY29sb3JzLnNjc3MiLCJzaXRlLWFkbWluLmNzcyIsInZhcmlhYmxlcy9fdHlwb2dyYXBoeS5zY3NzIiwiZ3V0ZW5iZXJnL19ndXRlbmJlcmcuc2NzcyIsImVsZW1lbnRzL19lbGVtZW50cy5zY3NzIiwiZWxlbWVudHMvX2xpc3RzLnNjc3MiLCJlbGVtZW50cy9fdGFibGVzLnNjc3MiLCJmb3Jtcy9fYnV0dG9ucy5zY3NzIiwibWl4aW5zL19taXhpbnMtbWFzdGVyLnNjc3MiLCJ2YXJpYWJsZXMvX2JyZWFrcG9pbnRzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUNxQ0E7O0NDbENDO0VDWUQsOENBQUE7RUFhQSwwQ0FBQTtFQWFBLDBDQUFBO0VBMkJBLHdDQUFBO0VBRUEsb0NBQUE7RUEyQ0E7Ozs7RURwR0U7RUM4R0Y7OztFRDFHRTtFQ3VIRjs7Ozs7Ozs7O0VEN0dFO0VFSkY7Ozs7RUZTRTtFRU1GOzs7O0VGREUsRUVLQztFSjFDSDtJQUdJLGlCQUFpQixFQUFBO0VBSHJCO0lBTUksZUFBZSxFQUFBOztBR1VuQjtFSGhCQTtJR2lCRSwrQkFBK0I7SUFDL0Isa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixvSEFBb0g7SUFBRSxxQkFBQTtJQUN0SCx5ckJBS2tKO0lBQUUsZUFBQSxFQUFnQixFSFRySzs7QUdZRDtFSDdCQTtJRzhCRSwrQkFBK0I7SUFDL0Isa0JBQWtCO0lBQ2xCLGdCQUFnQjtJQUNoQixnSEFBZ0g7SUFBRSxxQkFBQTtJQUNsSCxxcUJBSzhJO0lBQUUsZUFBQSxFQUFnQixFSHRCaks7O0FHeUJEO0VIMUNBO0lHMkNFLCtCQUErQjtJQUMvQixrQkFBa0I7SUFDbEIsZ0JBQWdCO0lBQ2hCLGdIQUFnSDtJQUFFLHFCQUFBO0lBQ2xILHFxQkFLOEk7SUFBRSxlQUFBLEVBQWdCLEVIbkNqSzs7QUd1Q0Q7RUh4REE7SUd5REUscUJBQXFCO0lBQ3JCLGtCQUFrQjtJQUNsQixn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OURqQjtJUWtGQyxvQkFBYTtJQUFiLG9CQUFhO0lBQWIsYUFBYTtJQUNiLHVCTGtEdUI7SUtqRHZCLHdCQUF1QjtRQUF2QixxQkFBdUI7WUFBdkIsdUJBQXVCLEVBQUE7SVJwRnhCO01RdUZFLG9CTDhDc0I7TUs3Q3RCLGdCQUFnQjtNQUNoQixTQUFTLEVBQUEiLCJmaWxlIjoic2l0ZS1hZG1pbi5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZWRpdG9yLXN0eWxlcy13cmFwcGVyIHtcblxuICA6d2hlcmUoLndwLWJsb2NrKSB7XG4gICAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gIH1cbiAgLmJsb2NrLWVkaXRvci1ibG9jay1saXN0X19sYXlvdXQuaXMtcm9vdC1jb250YWluZXI+LndwLWJsb2NrW2RhdGEtYWxpZ249ZnVsbF17XG4gICAgbWF4LXdpZHRoOiBub25lO1xuICB9XG5cbiAgQGltcG9ydCBcInZhcmlhYmxlcy92YXJpYWJsZXMtc2l0ZVwiO1xuICBAaW1wb3J0IFwibWl4aW5zL21peGlucy1tYXN0ZXJcIjtcbiAgQGltcG9ydCBcImVsZW1lbnRzL2VsZW1lbnRzXCI7XG4gIEBpbXBvcnQgXCJlbGVtZW50cy9saXN0c1wiO1xuICBAaW1wb3J0IFwiZWxlbWVudHMvdGFibGVzXCI7XG4gIEBpbXBvcnQgXCJndXRlbmJlcmcvZ3V0ZW5iZXJnXCI7XG4gIEBpbXBvcnQgXCJmb3Jtcy9idXR0b25zXCI7ICBcblxufSIsIiRjb2xvcl9fYmFja2dyb3VuZC1ib2R5OiAjZmZmO1xuJGNvbG9yX19iYWNrZ3JvdW5kLXNjcmVlbjogI2YxZjFmMTtcbiRjb2xvcl9fYmFja2dyb3VuZC1ocjogI2NjYztcbiRjb2xvcl9fYmFja2dyb3VuZC1idXR0b246ICNlNmU2ZTY7XG4kY29sb3JfX2JhY2tncm91bmQtcHJlOiAjZWVlO1xuJGNvbG9yX19iYWNrZ3JvdW5kLWluczogI2ZmZjljMDtcbiR3aGl0ZTogJGNvbG9yX19iYWNrZ3JvdW5kLWJvZHk7XG5cblxuJGNvbG9yX190ZXh0LW1haW46ICM0MDQwNDA7XG5cbiRjb2xvcl9fdGV4dC1zY3JlZW46ICMyMTc1OWI7XG4kY29sb3JfX3RleHQtaW5wdXQ6ICM2NjY7XG4kY29sb3JfX3RleHQtaW5wdXQtZm9jdXM6ICMxMTE7XG5cbiRjb2xvcl9fbGluazogIzAwMDtcbiRjb2xvcl9fbGluay12aXNpdGVkOiBsaWdodGVuKCRjb2xvcl9fbGluaywxMCUpO1xuJGNvbG9yX19saW5rLWhvdmVyOiAjMjQ5NEJDO1xuXG5cbiRjb2xvcl9fYm9yZGVyLWJ1dHRvbjogI2NjYyAjY2NjICNiYmI7XG4kY29sb3JfX2JvcmRlci1idXR0b24taG92ZXI6ICNjY2MgI2JiYiAjYWFhO1xuJGNvbG9yX19ib3JkZXItYnV0dG9uLWZvY3VzOiAjYWFhICNiYmIgI2JiYjtcbiRjb2xvcl9fYm9yZGVyLWlucHV0OiAjY2NjO1xuJGNvbG9yX19ib3JkZXItYWJicjogIzY2NjtcblxuJGJsdWU6ICMyRUJBRUM7XG4kYmx1ZV9vcGFjOiByZ2JhKDQ2LDE4NiwyMzYsLjE3KTtcbiRibHVlX21lbnU6IHJnYmEoNDYsMTg2LDIzNiwuNTApO1xuXG4kZ3JlZW46ICMwRUM5OTc7XG4kZGFya2JsdWU6ICMxNDIzMkY7XG4kYm9yZGVyX2NvbG9yOiAjRUFFQUVBO1xuJGxpZ2h0Z3JheTogI0Y3RjdGNztcblxuJGJsdWVfYWlyOiAjNjU4REFEO1xuXG4vKlxuICAgIERFTklGSVJFIHZhcmlhYmxlc1xuKi8gXG4kaGVhZGVyLWJnOiByZ2JhKDAsMCwwLDAuNDEpO1xuJG1vYmlsZS1tZW51LWJnOiByZ2JhKDAsMCwwLDAuNzEpO1xuJGNvbG9yLXdoaXRlOiAjZmZmO1xuJGNvbG9yLXJlZDogI0U1MEExOTtcbiRjb2xvci1ncmF5OiAjOTk5OTk5OyIsIi5lZGl0b3Itc3R5bGVzLXdyYXBwZXIge1xuICAvKlxuICAgIERFTklGSVJFIHZhcmlhYmxlc1xuKi9cbiAgLyogcm9ib3RvLWNvbmRlbnNlZC1yZWd1bGFyIC0gbGF0aW5fY3lyaWxsaWMgKi9cbiAgLyogcm9ib3RvLWNvbmRlbnNlZC03MDAgLSBsYXRpbl9jeXJpbGxpYyAqL1xuICAvKiByb2JvdG8tY29uZGVuc2VkLTMwMCAtIGxhdGluX2N5cmlsbGljICovXG4gIC8qIHJvYm90by1yZWd1bGFyIC0gbGF0aW5fY3lyaWxsaWMtZXh0ICovXG4gIC8qIHJvYm90by03MDAgLSBsYXRpbl9jeXJpbGxpYy1leHQgKi9cbiAgLyoqXG4gKiBTdHJpcHMgdGhlIHVuaXQgZnJvbSBhIGdpdmVuIG51bWJlci11bml0LWNvbWJpbmF0aW9uIGFuZCByZXR1cm5zIHRoZSBudW1iZXIuXG4gKiBAbGluazogaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMTIzMzU4NDEvMTc3OTk5OVxuICogQHVzYWdlOiBwYXJzZS1pbnQoMTBweCkgPT4gMTBcbiAqL1xuICAvKipcbiAqIFNpbXBseSBhZGRzIHRoZSBlbSB1bml0IHRvIGEgZ2l2ZW4gbnVtYmVyLiBUaGlzIGlzIHVzZWQgdHdpY2UgaW4gdGhlXG4gKiBmdW5jdGlvbiB1bmRlcm5lYXRoLCB0aHVzIHRoZSBuZWVkIGZvciBhIHNlcGFyYXRlIGZ1bmN0aW9uLlxuICovXG4gIC8qKlxuICogQ2FsY3VsYXRlcyBlbSB2YWx1ZXMgZm9yIGEgZ2l2ZW4gbGlzdCBvZiAocHggb3IgZW0pIHZhbHVlcyBhbmQgYSBnaXZlbiBlbVxuICogYmFzZS4gTXVsdGlwbHkgYmFzZSB2YWx1ZXMgZm9yIG5lc3RlZCBlbSBzdHJ1Y3R1cmVzIChsYXN0IEB1c2FnZSBleGFtcGxlKS5cbiAqIEB1c2FnZTogZW0oMTBweCwgMS4xMjUpID0+IC41NTU1NmVtXG4gKiAgICAgICAgIGVtKDI0cHgsIC44NzVlbSkgPT4gMS43MTQyOWVtXG4gKiAgICAgICAgIGVtKDEycHggMCA3ZW0gcmdiYSgwLCAwLCAwLCAuNyksIDEuNzUpID0+IC40Mjg1N2VtIDAgNGVtIHJnYmEoMCwgMCwgMCwgMC43KVxuICogICAgICAgICBlbSgxMnB4KSArIGVtKDNlbSkgPT4gMy43NWVtXG4gKiAgICAgICAgIGVtKDIzcHgsIGVtKDUzcHgpKSA9PiAuNDMzOTZlbVxuICogICAgICAgICBlbSgyNHB4LCAxLjUgKiAxLjEyNSkgPT4gLjg4ODg5ZW1cbiAqL1xuICAvKipcbiAqIENvbG9yIHBhbGV0dGUuXG4gKlxuICogQHNlZSByZXNvdXJjZXMvc3R5bGVzL3NoYXJlZC9fdmFyaWFibGVzLnNjc3NcbiAqL1xuICAvKipcbiAqIEZvbnQgc2l6ZXMuXG4gKlxuICogQHNlZSByZXNvdXJjZXMvc3R5bGVzL3NoYXJlZC9fdmFyaWFibGVzLnNjc3NcbiAqLyB9XG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgOndoZXJlKC53cC1ibG9jaykge1xuICAgIG1heC13aWR0aDogMTIwMHB4OyB9XG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgLmJsb2NrLWVkaXRvci1ibG9jay1saXN0X19sYXlvdXQuaXMtcm9vdC1jb250YWluZXIgPiAud3AtYmxvY2tbZGF0YS1hbGlnbj1mdWxsXSB7XG4gICAgbWF4LXdpZHRoOiBub25lOyB9XG5cbkBmb250LWZhY2Uge1xuICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIHtcbiAgICBmb250LWZhbWlseTogJ1JvYm90byBDb25kZW5zZWQnO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIHNyYzogdXJsKFwiL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG9jb25kZW5zZWQvcm9ib3RvLWNvbmRlbnNlZC12MTktbGF0aW5fY3lyaWxsaWMtcmVndWxhci5lb3RcIik7XG4gICAgLyogSUU5IENvbXBhdCBNb2RlcyAqL1xuICAgIHNyYzogbG9jYWwoXCJcIiksIHVybChcIi93cC1jb250ZW50L3RoZW1lcy9kZW5pZmlyZS9hc3NldHMvZm9udHMvUm9ib3RvY29uZGVuc2VkL3JvYm90by1jb25kZW5zZWQtdjE5LWxhdGluX2N5cmlsbGljLXJlZ3VsYXIuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG9jb25kZW5zZWQvcm9ib3RvLWNvbmRlbnNlZC12MTktbGF0aW5fY3lyaWxsaWMtcmVndWxhci53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG9jb25kZW5zZWQvcm9ib3RvLWNvbmRlbnNlZC12MTktbGF0aW5fY3lyaWxsaWMtcmVndWxhci53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi93cC1jb250ZW50L3RoZW1lcy9kZW5pZmlyZS9hc3NldHMvZm9udHMvUm9ib3RvY29uZGVuc2VkL3JvYm90by1jb25kZW5zZWQtdjE5LWxhdGluX2N5cmlsbGljLXJlZ3VsYXIudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIvd3AtY29udGVudC90aGVtZXMvZGVuaWZpcmUvYXNzZXRzL2ZvbnRzL1JvYm90b2NvbmRlbnNlZC9yb2JvdG8tY29uZGVuc2VkLXYxOS1sYXRpbl9jeXJpbGxpYy1yZWd1bGFyLnN2ZyNSb2JvdG9Db25kZW5zZWRcIikgZm9ybWF0KFwic3ZnXCIpO1xuICAgIC8qIExlZ2FjeSBpT1MgKi8gfSB9XG5cbkBmb250LWZhY2Uge1xuICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIHtcbiAgICBmb250LWZhbWlseTogJ1JvYm90byBDb25kZW5zZWQnO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogNzAwO1xuICAgIHNyYzogdXJsKFwiL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG9jb25kZW5zZWQvcm9ib3RvLWNvbmRlbnNlZC12MTktbGF0aW5fY3lyaWxsaWMtNzAwLmVvdFwiKTtcbiAgICAvKiBJRTkgQ29tcGF0IE1vZGVzICovXG4gICAgc3JjOiBsb2NhbChcIlwiKSwgdXJsKFwiL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG9jb25kZW5zZWQvcm9ib3RvLWNvbmRlbnNlZC12MTktbGF0aW5fY3lyaWxsaWMtNzAwLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi93cC1jb250ZW50L3RoZW1lcy9kZW5pZmlyZS9hc3NldHMvZm9udHMvUm9ib3RvY29uZGVuc2VkL3JvYm90by1jb25kZW5zZWQtdjE5LWxhdGluX2N5cmlsbGljLTcwMC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG9jb25kZW5zZWQvcm9ib3RvLWNvbmRlbnNlZC12MTktbGF0aW5fY3lyaWxsaWMtNzAwLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG9jb25kZW5zZWQvcm9ib3RvLWNvbmRlbnNlZC12MTktbGF0aW5fY3lyaWxsaWMtNzAwLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG9jb25kZW5zZWQvcm9ib3RvLWNvbmRlbnNlZC12MTktbGF0aW5fY3lyaWxsaWMtNzAwLnN2ZyNSb2JvdG9Db25kZW5zZWRcIikgZm9ybWF0KFwic3ZnXCIpO1xuICAgIC8qIExlZ2FjeSBpT1MgKi8gfSB9XG5cbkBmb250LWZhY2Uge1xuICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIHtcbiAgICBmb250LWZhbWlseTogJ1JvYm90byBDb25kZW5zZWQnO1xuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICBmb250LXdlaWdodDogMzAwO1xuICAgIHNyYzogdXJsKFwiL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG9jb25kZW5zZWQvcm9ib3RvLWNvbmRlbnNlZC12MTktbGF0aW5fY3lyaWxsaWMtMzAwLmVvdFwiKTtcbiAgICAvKiBJRTkgQ29tcGF0IE1vZGVzICovXG4gICAgc3JjOiBsb2NhbChcIlwiKSwgdXJsKFwiL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG9jb25kZW5zZWQvcm9ib3RvLWNvbmRlbnNlZC12MTktbGF0aW5fY3lyaWxsaWMtMzAwLmVvdD8jaWVmaXhcIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksIHVybChcIi93cC1jb250ZW50L3RoZW1lcy9kZW5pZmlyZS9hc3NldHMvZm9udHMvUm9ib3RvY29uZGVuc2VkL3JvYm90by1jb25kZW5zZWQtdjE5LWxhdGluX2N5cmlsbGljLTMwMC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG9jb25kZW5zZWQvcm9ib3RvLWNvbmRlbnNlZC12MTktbGF0aW5fY3lyaWxsaWMtMzAwLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG9jb25kZW5zZWQvcm9ib3RvLWNvbmRlbnNlZC12MTktbGF0aW5fY3lyaWxsaWMtMzAwLnR0ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKSwgdXJsKFwiL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG9jb25kZW5zZWQvcm9ib3RvLWNvbmRlbnNlZC12MTktbGF0aW5fY3lyaWxsaWMtMzAwLnN2ZyNSb2JvdG9Db25kZW5zZWRcIikgZm9ybWF0KFwic3ZnXCIpO1xuICAgIC8qIExlZ2FjeSBpT1MgKi8gfSB9XG5cbkBmb250LWZhY2Uge1xuICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIHtcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuICAgIGZvbnQtd2VpZ2h0OiAxMDA7XG4gICAgc3JjOiB1cmwoXCIvd3AtY29udGVudC90aGVtZXMvZGVuaWZpcmUvYXNzZXRzL2ZvbnRzL1JvYm90by9yb2JvdG8tdjIwLWxhdGluX2N5cmlsbGljLWV4dC0xMDAuZW90XCIpO1xuICAgIC8qIElFOSBDb21wYXQgTW9kZXMgKi9cbiAgICBzcmM6IGxvY2FsKFwiXCIpLCB1cmwoXCIvd3AtY29udGVudC90aGVtZXMvZGVuaWZpcmUvYXNzZXRzL2ZvbnRzL1JvYm90by9yb2JvdG8tdjIwLWxhdGluX2N5cmlsbGljLWV4dC0xMDAuZW90PyNpZWZpeFwiKSBmb3JtYXQoXCJlbWJlZGRlZC1vcGVudHlwZVwiKSwgdXJsKFwiL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG8vcm9ib3RvLXYyMC1sYXRpbl9jeXJpbGxpYy1leHQtMTAwLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCIvd3AtY29udGVudC90aGVtZXMvZGVuaWZpcmUvYXNzZXRzL2ZvbnRzL1JvYm90by9yb2JvdG8tdjIwLWxhdGluX2N5cmlsbGljLWV4dC0xMDAud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCIvd3AtY29udGVudC90aGVtZXMvZGVuaWZpcmUvYXNzZXRzL2ZvbnRzL1JvYm90by9yb2JvdG8tdjIwLWxhdGluX2N5cmlsbGljLWV4dC0xMDAudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpLCB1cmwoXCIvd3AtY29udGVudC90aGVtZXMvZGVuaWZpcmUvYXNzZXRzL2ZvbnRzL1JvYm90by9yb2JvdG8tdjIwLWxhdGluX2N5cmlsbGljLWV4dC0xMDAuc3ZnI1JvYm90b1wiKSBmb3JtYXQoXCJzdmdcIik7XG4gICAgLyogTGVnYWN5IGlPUyAqLyB9IH1cblxuQGZvbnQtZmFjZSB7XG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIge1xuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgICBzcmM6IHVybChcIi93cC1jb250ZW50L3RoZW1lcy9kZW5pZmlyZS9hc3NldHMvZm9udHMvUm9ib3RvL3JvYm90by12MjAtbGF0aW5fY3lyaWxsaWMtZXh0LTcwMC5lb3RcIik7XG4gICAgLyogSUU5IENvbXBhdCBNb2RlcyAqL1xuICAgIHNyYzogbG9jYWwoXCJcIiksIHVybChcIi93cC1jb250ZW50L3RoZW1lcy9kZW5pZmlyZS9hc3NldHMvZm9udHMvUm9ib3RvL3JvYm90by12MjAtbGF0aW5fY3lyaWxsaWMtZXh0LTcwMC5lb3Q/I2llZml4XCIpIGZvcm1hdChcImVtYmVkZGVkLW9wZW50eXBlXCIpLCB1cmwoXCIvd3AtY29udGVudC90aGVtZXMvZGVuaWZpcmUvYXNzZXRzL2ZvbnRzL1JvYm90by9yb2JvdG8tdjIwLWxhdGluX2N5cmlsbGljLWV4dC03MDAud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi93cC1jb250ZW50L3RoZW1lcy9kZW5pZmlyZS9hc3NldHMvZm9udHMvUm9ib3RvL3JvYm90by12MjAtbGF0aW5fY3lyaWxsaWMtZXh0LTcwMC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcIi93cC1jb250ZW50L3RoZW1lcy9kZW5pZmlyZS9hc3NldHMvZm9udHMvUm9ib3RvL3JvYm90by12MjAtbGF0aW5fY3lyaWxsaWMtZXh0LTcwMC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIiksIHVybChcIi93cC1jb250ZW50L3RoZW1lcy9kZW5pZmlyZS9hc3NldHMvZm9udHMvUm9ib3RvL3JvYm90by12MjAtbGF0aW5fY3lyaWxsaWMtZXh0LTcwMC5zdmcjUm9ib3RvXCIpIGZvcm1hdChcInN2Z1wiKTtcbiAgICAvKiBMZWdhY3kgaU9TICovIH0gfVxuICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIGh0bWwge1xuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cbiAgLmVkaXRvci1zdHlsZXMtd3JhcHBlciAqLFxuICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyICo6YmVmb3JlLFxuICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyICo6YWZ0ZXIge1xuICAgIC8qIEluaGVyaXQgYm94LXNpemluZyB0byBtYWtlIGl0IGVhc2llciB0byBjaGFuZ2UgdGhlIHByb3BlcnR5IGZvciBjb21wb25lbnRzIHRoYXQgbGV2ZXJhZ2Ugb3RoZXIgYmVoYXZpb3I7IHNlZSBodHRwczovL2Nzcy10cmlja3MuY29tL2luaGVyaXRpbmctYm94LXNpemluZy1wcm9iYWJseS1zbGlnaHRseS1iZXR0ZXItYmVzdC1wcmFjdGljZS8gKi9cbiAgICBib3gtc2l6aW5nOiBpbmhlcml0OyB9XG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgdWwsIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgb2wge1xuICAgIG1hcmdpbjogMDsgfVxuICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIHVsIHtcbiAgICBsaXN0LXN0eWxlOiBub25lIG91dHNpZGUgbm9uZTsgfVxuICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIG9sIHtcbiAgICBsaXN0LXN0eWxlOiBkZWNpbWFsOyB9XG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgbGkgPiB1bCxcbiAgLmVkaXRvci1zdHlsZXMtd3JhcHBlciBsaSA+IG9sIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIG1hcmdpbi1sZWZ0OiAuNWVtOyB9XG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgZHQge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgZGQge1xuICAgIG1hcmdpbjogMCAxLjVlbSAxLjVlbTsgfVxuICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIHRhYmxlIHtcbiAgICBtYXJnaW46IDAgMCAxLjVlbTtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIC50YWJsZS13cmFwcGVyIHtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgIG1hcmdpbjogMCAwIDIwcHg7XG4gICAgb3ZlcmZsb3cteTogaGlkZGVuOyB9XG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgdWwsIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgb2wge1xuICAgIG1hcmdpbjogMDsgfVxuICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIHVsIHtcbiAgICBsaXN0LXN0eWxlOiBub25lIG91dHNpZGUgbm9uZTsgfVxuICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIG9sIHtcbiAgICBsaXN0LXN0eWxlOiBkZWNpbWFsOyB9XG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgbGkgPiB1bCxcbiAgLmVkaXRvci1zdHlsZXMtd3JhcHBlciBsaSA+IG9sIHtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIG1hcmdpbi1sZWZ0OiAuNWVtOyB9XG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgZHQge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkOyB9XG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgZGQge1xuICAgIG1hcmdpbjogMCAxLjVlbSAxLjVlbTsgfVxuICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIHRhYmxlIHtcbiAgICBtYXJnaW46IDAgMCAxLjVlbTtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIC50YWJsZS13cmFwcGVyIHtcbiAgICBvdmVyZmxvdy14OiBhdXRvO1xuICAgIG1hcmdpbjogMCAwIDIwcHg7XG4gICAgb3ZlcmZsb3cteTogaGlkZGVuOyB9XG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgLmhhcy1ncmV5LXRleHQtY29sb3Ige1xuICAgIGNvbG9yOiAjNjQ2NDY0OyB9XG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgLmhhcy1ncmV5LXRleHQtYmFja2dyb3VuZC1jb2xvciB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzY0NjQ2NDsgfVxuICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIC5oYXMtZGFyay1ncmV5LWNvbG9yIHtcbiAgICBjb2xvcjogIzMzMzMzMzsgfVxuICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIC5oYXMtZGFyay1ncmV5LWJhY2tncm91bmQtY29sb3Ige1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzMzMzMzM7IH1cbiAgLmVkaXRvci1zdHlsZXMtd3JhcHBlciAuaGFzLXhzLWZvbnQtc2l6ZSB7XG4gICAgZm9udC1zaXplOiAxMnB4OyB9XG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgLmhhcy1zLWZvbnQtc2l6ZSB7XG4gICAgZm9udC1zaXplOiAxNnB4OyB9XG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgLmhhcy1tLWZvbnQtc2l6ZSB7XG4gICAgZm9udC1zaXplOiAxOHB4OyB9XG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgLmhhcy1sLWZvbnQtc2l6ZSB7XG4gICAgZm9udC1zaXplOiAyNnB4OyB9XG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgLmhhcy14bC1mb250LXNpemUge1xuICAgIGZvbnQtc2l6ZTogNDJweDsgfVxuICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIGJvZHkgLmVkaXRvci1zdHlsZXMtd3JhcHBlciB7XG4gICAgLypcbiAgY29sb3I6ICRjb2xvcl9fdGV4dC1tYWluO1xuICBmb250LWZhbWlseTogJGZvbnQtZmFtaWxpLXBhcmFncmFwaDtcbiAgKi9cbiAgICAvKlxuICBoMSxoMixoMyxoNCxoNSxoNiB7XG4gICAgZm9udC1mYW1pbHk6IFJvYm90bywgc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBsaW5lLWhlaWdodDogMS40O1xuICAgIGNvbG9yOiAkZGFya2dyZXk7XG4gICAgbWFyZ2luOiAwO1xuICB9XG4gIGgxe1xuICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgfVxuXG4gIGgye1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgfVxuXG4gIGgze1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgfVxuXG4gIGg0e1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgfVxuXG4gIGg1LGg2e1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgfVxuXG4gIGF7XG4gICAgY29sb3I6ICRibHVlO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgfVxuXG4gIHB7XG4gICAgZm9udC1zaXplOiBlbSgxNCk7XG4gICAgbWFyZ2luOiAwO1xuICAgIEBpbmNsdWRlIGJwKHRhYmxldCl7XG4gICAgICBmb250LXNpemU6IDFlbTtcbiAgICB9XG4gIH1cbiAgKi8gfVxuICAgIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgYm9keSAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIC53cC1ibG9ja1tkYXRhLWFsaWduPWZ1bGxdIHtcbiAgICAgIG1heC13aWR0aDogbm9uZTsgfVxuICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIC53cC1ibG9jay1jb3Zlci5hbGlnbmZ1bGwge1xuICAgIHBhZGRpbmc6IDA7IH1cbiAgICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIC53cC1ibG9jay1jb3Zlci5hbGlnbmZ1bGwgLndwLWJsb2NrLWNvdmVyX19pbm5lci1jb250YWluZXIge1xuICAgICAgd2lkdGg6IDEwMCU7IH1cbiAgLmVkaXRvci1zdHlsZXMtd3JhcHBlciAuaXMtc3R5bGUtcmVkLWJ1dHRvbiBhIHtcbiAgICBhcHBlYXJhbmNlOiBub25lOyB9XG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgLmlzLXN0eWxlLXJlZC1idXR0b24gLndwLWJsb2NrLWJ1dHRvbl9fbGluayB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0U1MEExOTtcbiAgICBwYWRkaW5nOiAwOyB9XG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgLndwLWJsb2NrLWdhbGxlcnkuaGFzLW5lc3RlZC1pbWFnZXMgZmlndXJlLndwLWJsb2NrLWltYWdlIGltZyB7XG4gICAgbWF4LXdpZHRoOiA2LjI1cmVtICFpbXBvcnRhbnQ7IH1cbiAgLmVkaXRvci1zdHlsZXMtd3JhcHBlciBidXR0b24sXG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgaW5wdXRbdHlwZT1cImJ1dHRvblwiXSxcbiAgLmVkaXRvci1zdHlsZXMtd3JhcHBlciBpbnB1dFt0eXBlPVwicmVzZXRcIl0sXG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gICAgYm9yZGVyOiAxcHggc29saWQ7XG4gICAgYm9yZGVyLWNvbG9yOiAjY2NjICNjY2MgI2JiYjtcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XG4gICAgYmFja2dyb3VuZDogI2U2ZTZlNjtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjgpO1xuICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICBmb250LXNpemU6IDAuNzVyZW07XG4gICAgbGluZS1oZWlnaHQ6IDE7XG4gICAgcGFkZGluZzogLjZlbSAxZW0gLjRlbTsgfVxuICAgIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgYnV0dG9uOmhvdmVyLFxuICAgIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgaW5wdXRbdHlwZT1cImJ1dHRvblwiXTpob3ZlcixcbiAgICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIGlucHV0W3R5cGU9XCJyZXNldFwiXTpob3ZlcixcbiAgICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIGlucHV0W3R5cGU9XCJzdWJtaXRcIl06aG92ZXIge1xuICAgICAgYm9yZGVyLWNvbG9yOiAjY2NjICNiYmIgI2FhYTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGRjAwMTE7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIGJ1dHRvbjphY3RpdmUsIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgYnV0dG9uOmZvY3VzLFxuICAgIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgaW5wdXRbdHlwZT1cImJ1dHRvblwiXTphY3RpdmUsXG4gICAgLmVkaXRvci1zdHlsZXMtd3JhcHBlciBpbnB1dFt0eXBlPVwiYnV0dG9uXCJdOmZvY3VzLFxuICAgIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgaW5wdXRbdHlwZT1cInJlc2V0XCJdOmFjdGl2ZSxcbiAgICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIGlucHV0W3R5cGU9XCJyZXNldFwiXTpmb2N1cyxcbiAgICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIGlucHV0W3R5cGU9XCJzdWJtaXRcIl06YWN0aXZlLFxuICAgIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgaW5wdXRbdHlwZT1cInN1Ym1pdFwiXTpmb2N1cyB7XG4gICAgICBib3JkZXItY29sb3I6ICNhYWEgI2JiYiAjYmJiOyB9XG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgLnNlYXJjaC1maWVsZCB7XG4gICAgYm9yZGVyLXJhZGl1czogMCAhaW1wb3J0YW50O1xuICAgIHBhZGRpbmctbGVmdDogMjFweCAhaW1wb3J0YW50O1xuICAgIG1pbi1oZWlnaHQ6IDQ2cHggIWltcG9ydGFudDtcbiAgICBib3JkZXI6IDAgIWltcG9ydGFudDsgfVxuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgLmVkaXRvci1zdHlsZXMtd3JhcHBlciAuc2VhcmNoLWZpZWxkIHtcbiAgICAgICAgbWluLXdpZHRoOiAzMjBweDsgfSB9XG4gIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgLnJlZC1idXR0b24sIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgLnJlZC1idXR0b24gYSwgLmVkaXRvci1zdHlsZXMtd3JhcHBlciBpbnB1dC5yZWQtYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0sIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgLmlzLXN0eWxlLXJlZC1idXR0b24gLndwLWJsb2NrLWJ1dHRvbl9fbGluaywgLmVkaXRvci1zdHlsZXMtd3JhcHBlciAuc2VhcmNoLXN1Ym1pdCB7XG4gICAgYXBwZWFyYW5jZTogbm9uZTtcbiAgICBib3JkZXI6IDA7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0U1MEExOSAhaW1wb3J0YW50O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICAgIGNvbG9yOiAjZmZmICFpbXBvcnRhbnQ7XG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgZm9udC1zaXplOiAxZW07XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICBtaW4td2lkdGg6IDI0MHB4O1xuICAgIG1pbi1oZWlnaHQ6IDQ2cHg7XG4gICAgcGFkZGluZzogMjFweCAzMHB4IDIxcHg7XG4gICAgdHJhbnNpdGlvbjogMC4ycyBlYXNlLW91dDsgfVxuICAgIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgLnJlZC1idXR0b246aG92ZXIsIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgLnJlZC1idXR0b24gYTpob3ZlciwgLmVkaXRvci1zdHlsZXMtd3JhcHBlciBpbnB1dC5yZWQtYnV0dG9uOmhvdmVyW3R5cGU9XCJzdWJtaXRcIl0sIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgLmlzLXN0eWxlLXJlZC1idXR0b24gLndwLWJsb2NrLWJ1dHRvbl9fbGluazpob3ZlciwgLmVkaXRvci1zdHlsZXMtd3JhcHBlciAuc2VhcmNoLXN1Ym1pdDpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkYwMDExICFpbXBvcnRhbnQ7XG4gICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cbiAgICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIC5yZWQtYnV0dG9uLnByb2R1Y3RfX3JlcXVlc3RCdG4sIC5lZGl0b3Itc3R5bGVzLXdyYXBwZXIgLnJlZC1idXR0b24gYS5wcm9kdWN0X19yZXF1ZXN0QnRuLCAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIGlucHV0LnByb2R1Y3RfX3JlcXVlc3RCdG4ucmVkLWJ1dHRvblt0eXBlPVwic3VibWl0XCJdLCAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIC5pcy1zdHlsZS1yZWQtYnV0dG9uIC53cC1ibG9jay1idXR0b25fX2xpbmsucHJvZHVjdF9fcmVxdWVzdEJ0biwgLmVkaXRvci1zdHlsZXMtd3JhcHBlciAuc2VhcmNoLXN1Ym1pdC5wcm9kdWN0X19yZXF1ZXN0QnRuIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgLmVkaXRvci1zdHlsZXMtd3JhcHBlciAuc2VhcmNoLWZvcm0ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbWFyZ2luLWJvdHRvbTogMS44NzVyZW07XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH1cbiAgICAuZWRpdG9yLXN0eWxlcy13cmFwcGVyIC5zZWFyY2gtZm9ybSAuc2VhcmNoLXN1Ym1pdCB7XG4gICAgICBtaW4td2lkdGg6IDguNjg3NXJlbTtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgICBib3JkZXI6IDA7IH1cbiIsIi8vICBGb250cyBhbmQgaWNvbnNcbi8vICAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4vLyBNaXhpbiBmb3IgYWRkaW5nIGN1c3RvbSBmb250cyBpbiB0aGUgZGlyIC9mb250cy9mb250Zm9sZGVybmFtZS9mb250LXJlZ3VsYXJcbi8vIGV4YW1wbGUgL2ZvbnRzL2F2ZXJ0YS9hdmVydGEtYm9sZC53b2ZmXG4vLyBleGFtcGxlIC9mb250cy9hdmVydGEvYXZlcnRhLXJlZ3VsYXIud29mZlxuXG5AbWl4aW4gZm9udGRlZigkcGF0aCwgJGZpbGVuYW1lLCAkdmVyc2lvbiwgJHR5cGU6XCJSZWd1bGFyXCIpIHtcbiAgc3JjOiB1cmwoXCIvd3AtY29udGVudC90aGVtZXMvZGVuaWZpcmUvYXNzZXRzL2ZvbnRzLyN7JHBhdGh9LyN7JGZpbGVuYW1lfS0jeyR0eXBlfS5lb3Q/I2llZml4JnY9I3skdmVyc2lvbn1cIikgZm9ybWF0KFwiZW1iZWRkZWQtb3BlbnR5cGVcIiksXG4gIHVybChcIi93cC1jb250ZW50L3RoZW1lcy9kZW5pZmlyZS9hc3NldHMvZm9udHMvI3skcGF0aH0vI3skZmlsZW5hbWV9LSN7JHR5cGV9LndvZmYmdj0jeyR2ZXJzaW9ufVwiKSBmb3JtYXQoXCJ3b2ZmXCIpLFxuICB1cmwoXCIvd3AtY29udGVudC90aGVtZXMvZGVuaWZpcmUvYXNzZXRzL2ZvbnRzLyN7JHBhdGh9LyN7JGZpbGVuYW1lfS0jeyR0eXBlfS50dGYmdj0jeyR2ZXJzaW9ufVwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbn1cblxuXG5cbi8qIHJvYm90by1jb25kZW5zZWQtcmVndWxhciAtIGxhdGluX2N5cmlsbGljICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdSb2JvdG8gQ29uZGVuc2VkJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xuICBzcmM6IHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG9jb25kZW5zZWQvcm9ib3RvLWNvbmRlbnNlZC12MTktbGF0aW5fY3lyaWxsaWMtcmVndWxhci5lb3QnKTsgLyogSUU5IENvbXBhdCBNb2RlcyAqL1xuICBzcmM6IGxvY2FsKCcnKSxcbiAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9kZW5pZmlyZS9hc3NldHMvZm9udHMvUm9ib3RvY29uZGVuc2VkL3JvYm90by1jb25kZW5zZWQtdjE5LWxhdGluX2N5cmlsbGljLXJlZ3VsYXIuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSwgLyogSUU2LUlFOCAqL1xuICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG9jb25kZW5zZWQvcm9ib3RvLWNvbmRlbnNlZC12MTktbGF0aW5fY3lyaWxsaWMtcmVndWxhci53b2ZmMicpIGZvcm1hdCgnd29mZjInKSwgLyogU3VwZXIgTW9kZXJuIEJyb3dzZXJzICovXG4gICAgICAgdXJsKCcvd3AtY29udGVudC90aGVtZXMvZGVuaWZpcmUvYXNzZXRzL2ZvbnRzL1JvYm90b2NvbmRlbnNlZC9yb2JvdG8tY29uZGVuc2VkLXYxOS1sYXRpbl9jeXJpbGxpYy1yZWd1bGFyLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSwgLyogTW9kZXJuIEJyb3dzZXJzICovXG4gICAgICAgdXJsKCcvd3AtY29udGVudC90aGVtZXMvZGVuaWZpcmUvYXNzZXRzL2ZvbnRzL1JvYm90b2NvbmRlbnNlZC9yb2JvdG8tY29uZGVuc2VkLXYxOS1sYXRpbl9jeXJpbGxpYy1yZWd1bGFyLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKSwgLyogU2FmYXJpLCBBbmRyb2lkLCBpT1MgKi9cbiAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9kZW5pZmlyZS9hc3NldHMvZm9udHMvUm9ib3RvY29uZGVuc2VkL3JvYm90by1jb25kZW5zZWQtdjE5LWxhdGluX2N5cmlsbGljLXJlZ3VsYXIuc3ZnI1JvYm90b0NvbmRlbnNlZCcpIGZvcm1hdCgnc3ZnJyk7IC8qIExlZ2FjeSBpT1MgKi9cbn1cbi8qIHJvYm90by1jb25kZW5zZWQtNzAwIC0gbGF0aW5fY3lyaWxsaWMgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1JvYm90byBDb25kZW5zZWQnO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIHNyYzogdXJsKCcvd3AtY29udGVudC90aGVtZXMvZGVuaWZpcmUvYXNzZXRzL2ZvbnRzL1JvYm90b2NvbmRlbnNlZC9yb2JvdG8tY29uZGVuc2VkLXYxOS1sYXRpbl9jeXJpbGxpYy03MDAuZW90Jyk7IC8qIElFOSBDb21wYXQgTW9kZXMgKi9cbiAgc3JjOiBsb2NhbCgnJyksXG4gICAgICAgdXJsKCcvd3AtY29udGVudC90aGVtZXMvZGVuaWZpcmUvYXNzZXRzL2ZvbnRzL1JvYm90b2NvbmRlbnNlZC9yb2JvdG8tY29uZGVuc2VkLXYxOS1sYXRpbl9jeXJpbGxpYy03MDAuZW90PyNpZWZpeCcpIGZvcm1hdCgnZW1iZWRkZWQtb3BlbnR5cGUnKSwgLyogSUU2LUlFOCAqL1xuICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG9jb25kZW5zZWQvcm9ib3RvLWNvbmRlbnNlZC12MTktbGF0aW5fY3lyaWxsaWMtNzAwLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpLCAvKiBTdXBlciBNb2Rlcm4gQnJvd3NlcnMgKi9cbiAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9kZW5pZmlyZS9hc3NldHMvZm9udHMvUm9ib3RvY29uZGVuc2VkL3JvYm90by1jb25kZW5zZWQtdjE5LWxhdGluX2N5cmlsbGljLTcwMC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksIC8qIE1vZGVybiBCcm93c2VycyAqL1xuICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG9jb25kZW5zZWQvcm9ib3RvLWNvbmRlbnNlZC12MTktbGF0aW5fY3lyaWxsaWMtNzAwLnR0ZicpIGZvcm1hdCgndHJ1ZXR5cGUnKSwgLyogU2FmYXJpLCBBbmRyb2lkLCBpT1MgKi9cbiAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9kZW5pZmlyZS9hc3NldHMvZm9udHMvUm9ib3RvY29uZGVuc2VkL3JvYm90by1jb25kZW5zZWQtdjE5LWxhdGluX2N5cmlsbGljLTcwMC5zdmcjUm9ib3RvQ29uZGVuc2VkJykgZm9ybWF0KCdzdmcnKTsgLyogTGVnYWN5IGlPUyAqL1xufVxuLyogcm9ib3RvLWNvbmRlbnNlZC0zMDAgLSBsYXRpbl9jeXJpbGxpYyAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvIENvbmRlbnNlZCc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDMwMDtcbiAgc3JjOiB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9kZW5pZmlyZS9hc3NldHMvZm9udHMvUm9ib3RvY29uZGVuc2VkL3JvYm90by1jb25kZW5zZWQtdjE5LWxhdGluX2N5cmlsbGljLTMwMC5lb3QnKTsgLyogSUU5IENvbXBhdCBNb2RlcyAqL1xuICBzcmM6IGxvY2FsKCcnKSxcbiAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9kZW5pZmlyZS9hc3NldHMvZm9udHMvUm9ib3RvY29uZGVuc2VkL3JvYm90by1jb25kZW5zZWQtdjE5LWxhdGluX2N5cmlsbGljLTMwMC5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLCAvKiBJRTYtSUU4ICovXG4gICAgICAgdXJsKCcvd3AtY29udGVudC90aGVtZXMvZGVuaWZpcmUvYXNzZXRzL2ZvbnRzL1JvYm90b2NvbmRlbnNlZC9yb2JvdG8tY29uZGVuc2VkLXYxOS1sYXRpbl9jeXJpbGxpYy0zMDAud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksIC8qIFN1cGVyIE1vZGVybiBCcm93c2VycyAqL1xuICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG9jb25kZW5zZWQvcm9ib3RvLWNvbmRlbnNlZC12MTktbGF0aW5fY3lyaWxsaWMtMzAwLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSwgLyogTW9kZXJuIEJyb3dzZXJzICovXG4gICAgICAgdXJsKCcvd3AtY29udGVudC90aGVtZXMvZGVuaWZpcmUvYXNzZXRzL2ZvbnRzL1JvYm90b2NvbmRlbnNlZC9yb2JvdG8tY29uZGVuc2VkLXYxOS1sYXRpbl9jeXJpbGxpYy0zMDAudHRmJykgZm9ybWF0KCd0cnVldHlwZScpLCAvKiBTYWZhcmksIEFuZHJvaWQsIGlPUyAqL1xuICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG9jb25kZW5zZWQvcm9ib3RvLWNvbmRlbnNlZC12MTktbGF0aW5fY3lyaWxsaWMtMzAwLnN2ZyNSb2JvdG9Db25kZW5zZWQnKSBmb3JtYXQoJ3N2ZycpOyAvKiBMZWdhY3kgaU9TICovXG59XG5cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvJztcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogMTAwO1xuICBzcmM6IHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG8vcm9ib3RvLXYyMC1sYXRpbl9jeXJpbGxpYy1leHQtMTAwLmVvdCcpOyAvKiBJRTkgQ29tcGF0IE1vZGVzICovXG4gIHNyYzogbG9jYWwoJycpLFxuICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG8vcm9ib3RvLXYyMC1sYXRpbl9jeXJpbGxpYy1leHQtMTAwLmVvdD8jaWVmaXgnKSBmb3JtYXQoJ2VtYmVkZGVkLW9wZW50eXBlJyksIC8qIElFNi1JRTggKi9cbiAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9kZW5pZmlyZS9hc3NldHMvZm9udHMvUm9ib3RvL3JvYm90by12MjAtbGF0aW5fY3lyaWxsaWMtZXh0LTEwMC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSwgLyogU3VwZXIgTW9kZXJuIEJyb3dzZXJzICovXG4gICAgICAgdXJsKCcvd3AtY29udGVudC90aGVtZXMvZGVuaWZpcmUvYXNzZXRzL2ZvbnRzL1JvYm90by9yb2JvdG8tdjIwLWxhdGluX2N5cmlsbGljLWV4dC0xMDAud29mZicpIGZvcm1hdCgnd29mZicpLCAvKiBNb2Rlcm4gQnJvd3NlcnMgKi9cbiAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9kZW5pZmlyZS9hc3NldHMvZm9udHMvUm9ib3RvL3JvYm90by12MjAtbGF0aW5fY3lyaWxsaWMtZXh0LTEwMC50dGYnKSBmb3JtYXQoJ3RydWV0eXBlJyksIC8qIFNhZmFyaSwgQW5kcm9pZCwgaU9TICovXG4gICAgICAgdXJsKCcvd3AtY29udGVudC90aGVtZXMvZGVuaWZpcmUvYXNzZXRzL2ZvbnRzL1JvYm90by9yb2JvdG8tdjIwLWxhdGluX2N5cmlsbGljLWV4dC0xMDAuc3ZnI1JvYm90bycpIGZvcm1hdCgnc3ZnJyk7IC8qIExlZ2FjeSBpT1MgKi9cbn1cbi8qIHJvYm90by1yZWd1bGFyIC0gbGF0aW5fY3lyaWxsaWMtZXh0ICovXG5cbi8qIHJvYm90by03MDAgLSBsYXRpbl9jeXJpbGxpYy1leHQgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ1JvYm90byc7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgc3JjOiB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9kZW5pZmlyZS9hc3NldHMvZm9udHMvUm9ib3RvL3JvYm90by12MjAtbGF0aW5fY3lyaWxsaWMtZXh0LTcwMC5lb3QnKTsgLyogSUU5IENvbXBhdCBNb2RlcyAqL1xuICBzcmM6IGxvY2FsKCcnKSxcbiAgICAgICB1cmwoJy93cC1jb250ZW50L3RoZW1lcy9kZW5pZmlyZS9hc3NldHMvZm9udHMvUm9ib3RvL3JvYm90by12MjAtbGF0aW5fY3lyaWxsaWMtZXh0LTcwMC5lb3Q/I2llZml4JykgZm9ybWF0KCdlbWJlZGRlZC1vcGVudHlwZScpLCAvKiBJRTYtSUU4ICovXG4gICAgICAgdXJsKCcvd3AtY29udGVudC90aGVtZXMvZGVuaWZpcmUvYXNzZXRzL2ZvbnRzL1JvYm90by9yb2JvdG8tdjIwLWxhdGluX2N5cmlsbGljLWV4dC03MDAud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksIC8qIFN1cGVyIE1vZGVybiBCcm93c2VycyAqL1xuICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG8vcm9ib3RvLXYyMC1sYXRpbl9jeXJpbGxpYy1leHQtNzAwLndvZmYnKSBmb3JtYXQoJ3dvZmYnKSwgLyogTW9kZXJuIEJyb3dzZXJzICovXG4gICAgICAgdXJsKCcvd3AtY29udGVudC90aGVtZXMvZGVuaWZpcmUvYXNzZXRzL2ZvbnRzL1JvYm90by9yb2JvdG8tdjIwLWxhdGluX2N5cmlsbGljLWV4dC03MDAudHRmJykgZm9ybWF0KCd0cnVldHlwZScpLCAvKiBTYWZhcmksIEFuZHJvaWQsIGlPUyAqL1xuICAgICAgIHVybCgnL3dwLWNvbnRlbnQvdGhlbWVzL2RlbmlmaXJlL2Fzc2V0cy9mb250cy9Sb2JvdG8vcm9ib3RvLXYyMC1sYXRpbl9jeXJpbGxpYy1leHQtNzAwLnN2ZyNSb2JvdG8nKSBmb3JtYXQoJ3N2ZycpOyAvKiBMZWdhY3kgaU9TICovXG59XG5cblxuXG5cblxuJGZvbnQtZmFtaWx5LXNhbnMtc2VyaWY6ICdSb2JvdG8gQ29uZGVuc2VkJyAsSGVsdmV0aWNhLCBBcmlhbCwgc2Fucy1zZXJpZjtcbiRmb250LWZhbWlseS1zZXJpZjogJ1JvYm90bycsICdUaW1lcyBOZXcgUm9tYW4nLCBzZXJpZjtcbiRmb250LWZhbWlsaS1wYXJhZ3JhcGg6ICdSb2JvdG8gQ29uZGVuc2VkJywgSGVsdmV0aWNhO1xuXG5cblxuJGZvbnRfX21haW46ICRmb250LWZhbWlsaS1wYXJhZ3JhcGg7XG4kZm9udF9fY29kZTogQXJpYWwsIFwiSGVsdmV0aWNhIE5ldWVcIiwgSGVsdmV0aWNhLCBzYW5zLXNlcmlmO1xuJGZvbnRfX3ByZTogXCJDb3VyaWVyIDEwIFBpdGNoXCIsIENvdXJpZXIsIG1vbm9zcGFjZTtcbiRmb250X19saW5lLWhlaWdodC1ib2R5OiAxLjU7XG4kZm9udF9fbGluZS1oZWlnaHQtcHJlOiAxLjY7XG5cbiRiYXNlX2ZvbnRfc2l6ZTogMTZweDtcbiRmb250X2ZhbWlseTogJGZvbnQtZmFtaWxpLXBhcmFncmFwaDtcbiRmb250X2ZhbWlseV9tZW51OiAkZm9udC1mYW1pbGktcGFyYWdyYXBoO1xuJGZvbnRfZmFtaWx5X2hlYWRpbmdzOiAkZm9udC1mYW1pbHktc2Fucy1zZXJpZjtcblxuXG4kZWFzaW5nOiBlYXNlLW91dDtcblxuXG4vLyBQWCB0byBFTS9SRU0gLSBodHRwczovL2dpc3QuZ2l0aHViLmNvbS9pc2VsbHNvYXAvODI5OTcyNlxuXG4kYmFzZS1mb250LXNpemU6ICRiYXNlX2ZvbnRfc2l6ZTtcblxuLyoqXG4gKiBTdHJpcHMgdGhlIHVuaXQgZnJvbSBhIGdpdmVuIG51bWJlci11bml0LWNvbWJpbmF0aW9uIGFuZCByZXR1cm5zIHRoZSBudW1iZXIuXG4gKiBAbGluazogaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL2EvMTIzMzU4NDEvMTc3OTk5OVxuICogQHVzYWdlOiBwYXJzZS1pbnQoMTBweCkgPT4gMTBcbiAqL1xuXG5AZnVuY3Rpb24gcGFyc2UtaW50KCRudW1iZXIpIHtcbiAgQHJldHVybiAkbnVtYmVyIC8gKCRudW1iZXIgKiAwICsgMSk7XG59XG5cbi8qKlxuICogU2ltcGx5IGFkZHMgdGhlIGVtIHVuaXQgdG8gYSBnaXZlbiBudW1iZXIuIFRoaXMgaXMgdXNlZCB0d2ljZSBpbiB0aGVcbiAqIGZ1bmN0aW9uIHVuZGVybmVhdGgsIHRodXMgdGhlIG5lZWQgZm9yIGEgc2VwYXJhdGUgZnVuY3Rpb24uXG4gKi9cblxuQGZ1bmN0aW9uIGFkZC1lbS11bml0KCRudW1iZXIpIHtcbiAgQHJldHVybiAkbnVtYmVyICogMWVtO1xufVxuXG5AZnVuY3Rpb24gYWRkLXJlbS11bml0KCRudW1iZXIpIHtcbiAgQHJldHVybiAkbnVtYmVyICogMXJlbTtcbn1cblxuLyoqXG4gKiBDYWxjdWxhdGVzIGVtIHZhbHVlcyBmb3IgYSBnaXZlbiBsaXN0IG9mIChweCBvciBlbSkgdmFsdWVzIGFuZCBhIGdpdmVuIGVtXG4gKiBiYXNlLiBNdWx0aXBseSBiYXNlIHZhbHVlcyBmb3IgbmVzdGVkIGVtIHN0cnVjdHVyZXMgKGxhc3QgQHVzYWdlIGV4YW1wbGUpLlxuICogQHVzYWdlOiBlbSgxMHB4LCAxLjEyNSkgPT4gLjU1NTU2ZW1cbiAqICAgICAgICAgZW0oMjRweCwgLjg3NWVtKSA9PiAxLjcxNDI5ZW1cbiAqICAgICAgICAgZW0oMTJweCAwIDdlbSByZ2JhKDAsIDAsIDAsIC43KSwgMS43NSkgPT4gLjQyODU3ZW0gMCA0ZW0gcmdiYSgwLCAwLCAwLCAwLjcpXG4gKiAgICAgICAgIGVtKDEycHgpICsgZW0oM2VtKSA9PiAzLjc1ZW1cbiAqICAgICAgICAgZW0oMjNweCwgZW0oNTNweCkpID0+IC40MzM5NmVtXG4gKiAgICAgICAgIGVtKDI0cHgsIDEuNSAqIDEuMTI1KSA9PiAuODg4ODllbVxuICovXG5cbkBmdW5jdGlvbiBlbSgkdmFsdWVzLCAkZW0tYmFzZTogMSkge1xuICAkYmFzZS1mb250LXNpemU6IHBhcnNlLWludCgkYmFzZS1mb250LXNpemUpO1xuICAkZW0tYmFzZTogcGFyc2UtaW50KCRlbS1iYXNlKTtcbiAgJHJlc3VsdDogKCk7XG5cbiAgQGVhY2ggJHZhbHVlIGluICR2YWx1ZXMge1xuICAgIEBpZiAkdmFsdWUgPT0gMCBvciB0eXBlLW9mKCR2YWx1ZSkgIT0gXCJudW1iZXJcIiB7XG4gICAgICAkcmVzdWx0OiBhcHBlbmQoJHJlc3VsdCwgJHZhbHVlKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICR1bml0OiB1bml0KCR2YWx1ZSk7XG4gICAgICAkdmFsdWU6IHBhcnNlLWludCgkdmFsdWUpO1xuXG4gICAgICBAaWYgJHVuaXQgPT0gXCJweFwiIHtcbiAgICAgICAgJHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsIGFkZC1lbS11bml0KCR2YWx1ZSAvICgkYmFzZS1mb250LXNpemUgKiAkZW0tYmFzZSkpKTtcbiAgICAgIH0gQGVsc2UgaWYgJHVuaXQgPT0gXCJlbVwiIHtcbiAgICAgICAgJHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsIGFkZC1lbS11bml0KCR2YWx1ZSAvICRlbS1iYXNlKSk7XG4gICAgICB9IEBlbHNlIGlmICR1bml0ID09IFwiXCIge1xuICAgICAgICAkcmVzdWx0OiBhcHBlbmQoJHJlc3VsdCwgYWRkLWVtLXVuaXQoJHZhbHVlIC8gKCRiYXNlLWZvbnQtc2l6ZSAqICRlbS1iYXNlKSkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBJZiBvbmx5IG9uZSB2YWx1ZSBpcyBwcm92aWRlZCwgb3V0cHV0IHRoZSBpbnN0YW5jZSBvZiB0aGF0IG9iamVjdCBpbnN0ZWFkXG4gICAqIG9mIHRoZSB3aG9sZSBsaXN0LiBUaGlzIGVuYWJsZXMgdXNlIGNhc2VzIGxpa2UgbmVzdGVkIGZ1bmN0aW9uIGludm9jYXRpb25zXG4gICAqIChlLmcuIGBlbSgycHgsIGVtKDE1cHgpKWApIG9yIGFkZGl0aW9ucy9zdWJ0cmFjdGlvbnMgKGUuZy4gYGVtKDVweCkgKyBlbSgzMnB4KWApLlxuICAgKi9cbiAgQGlmIGxlbmd0aCgkcmVzdWx0KSA9PSAxIHtcbiAgICBAcmV0dXJuIG50aCgkcmVzdWx0LCAxKTtcbiAgfSBAZWxzZSB7XG4gICAgQHJldHVybiAkcmVzdWx0O1xuICB9XG59XG5cblxuQGZ1bmN0aW9uIHJlbSgkdmFsdWVzLCAkZW0tYmFzZTogMSkge1xuICAkYmFzZS1mb250LXNpemU6IHBhcnNlLWludCgkYmFzZS1mb250LXNpemUpO1xuICAkZW0tYmFzZTogcGFyc2UtaW50KCRlbS1iYXNlKTtcbiAgJHJlc3VsdDogKCk7XG5cbiAgQGVhY2ggJHZhbHVlIGluICR2YWx1ZXMge1xuICAgIEBpZiAkdmFsdWUgPT0gMCBvciB0eXBlLW9mKCR2YWx1ZSkgIT0gXCJudW1iZXJcIiB7XG4gICAgICAkcmVzdWx0OiBhcHBlbmQoJHJlc3VsdCwgJHZhbHVlKTtcbiAgICB9IEBlbHNlIHtcbiAgICAgICR1bml0OiB1bml0KCR2YWx1ZSk7XG4gICAgICAkdmFsdWU6IHBhcnNlLWludCgkdmFsdWUpO1xuXG4gICAgICBAaWYgJHVuaXQgPT0gXCJweFwiIHtcbiAgICAgICAgJHJlc3VsdDogYXBwZW5kKCRyZXN1bHQsIGFkZC1yZW0tdW5pdCgkdmFsdWUgLyAoJGJhc2UtZm9udC1zaXplICogJGVtLWJhc2UpKSk7XG4gICAgICB9IEBlbHNlIGlmICR1bml0ID09IFwiZW1cIiB7XG4gICAgICAgICRyZXN1bHQ6IGFwcGVuZCgkcmVzdWx0LCBhZGQtcmVtLXVuaXQoJHZhbHVlIC8gJGVtLWJhc2UpKTtcbiAgICAgIH0gQGVsc2UgaWYgJHVuaXQgPT0gXCJcIiB7XG4gICAgICAgICRyZXN1bHQ6IGFwcGVuZCgkcmVzdWx0LCBhZGQtcmVtLXVuaXQoJHZhbHVlIC8gKCRiYXNlLWZvbnQtc2l6ZSAqICRlbS1iYXNlKSkpO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBJZiBvbmx5IG9uZSB2YWx1ZSBpcyBwcm92aWRlZCwgb3V0cHV0IHRoZSBpbnN0YW5jZSBvZiB0aGF0IG9iamVjdCBpbnN0ZWFkXG4gICAqIG9mIHRoZSB3aG9sZSBsaXN0LiBUaGlzIGVuYWJsZXMgdXNlIGNhc2VzIGxpa2UgbmVzdGVkIGZ1bmN0aW9uIGludm9jYXRpb25zXG4gICAqIChlLmcuIGBlbSgycHgsIGVtKDE1cHgpKWApIG9yIGFkZGl0aW9ucy9zdWJ0cmFjdGlvbnMgKGUuZy4gYGVtKDVweCkgKyBlbSgzMnB4KWApLlxuICAgKi9cbiAgQGlmIGxlbmd0aCgkcmVzdWx0KSA9PSAxIHtcbiAgICBAcmV0dXJuIG50aCgkcmVzdWx0LCAxKTtcbiAgfSBAZWxzZSB7XG4gICAgQHJldHVybiAkcmVzdWx0O1xuICB9XG59XG5cblxuIiwiLy8gTWFwcy5cbiRjb2xvcjogKFxuICAgICAgICBncmV5LXRleHQ6ICM2NDY0NjQsXG4gICAgICAgIGRhcmstZ3JleTogIzMzMzMzM1xuKTtcblxuJGZvbnQtc2l6ZTogKFxuICAgICAgICB4czogMTJweCxcbiAgICAgICAgczogMTZweCxcbiAgICAgICAgbTogMThweCxcbiAgICAgICAgbDogMjZweCxcbiAgICAgICAgeGw6IDQycHhcbik7XG5cbi8vIFZhcmlhYmxlcy5cbiRjb2xvci1ncmV5LXRleHQ6ICM2NDY0NjQ7XG4kY29sb3ItZGFyay1ncmV5OiAjMzMzMzMzO1xuJGZvbnQtc2l6ZS14czogMTJweDtcbiRmb250LXNpemUtczogMTZweDtcbiRmb250LXNpemUtbTogMThweDtcbiRmb250LXNpemUtbDogMjZweDtcbiRmb250LXNpemUteGw6IDQycHg7XG5cbi8qKlxuICogQ29sb3IgcGFsZXR0ZS5cbiAqXG4gKiBAc2VlIHJlc291cmNlcy9zdHlsZXMvc2hhcmVkL192YXJpYWJsZXMuc2Nzc1xuICovXG5AZWFjaCAkbmFtZSwgJHZhbHVlIGluICRjb2xvciB7XG4gIC5oYXMtI3skbmFtZX0tY29sb3Ige1xuICAgIGNvbG9yOiAkdmFsdWU7XG4gIH1cblxuICAuaGFzLSN7JG5hbWV9LWJhY2tncm91bmQtY29sb3Ige1xuICAgIGJhY2tncm91bmQtY29sb3I6ICR2YWx1ZTtcbiAgfVxufVxuXG4vKipcbiAqIEZvbnQgc2l6ZXMuXG4gKlxuICogQHNlZSByZXNvdXJjZXMvc3R5bGVzL3NoYXJlZC9fdmFyaWFibGVzLnNjc3NcbiAqL1xuQGVhY2ggJG5hbWUsICR2YWx1ZSBpbiAkZm9udC1zaXplIHtcbiAgLmhhcy0jeyRuYW1lfS1mb250LXNpemUge1xuICAgIGZvbnQtc2l6ZTogJHZhbHVlO1xuICB9XG59XG5cblxuXG5ib2R5IC5lZGl0b3Itc3R5bGVzLXdyYXBwZXJ7XG4gIC53cC1ibG9jayB7XG4gICAgLy9tYXgtd2lkdGg6IDkwJTtcbiAgfVxuICAud3AtYmxvY2tbZGF0YS1hbGlnbj1mdWxsXSB7XG4gICAgbWF4LXdpZHRoOiBub25lO1xuICB9XG5cbiAgLypcbiAgY29sb3I6ICRjb2xvcl9fdGV4dC1tYWluO1xuICBmb250LWZhbWlseTogJGZvbnQtZmFtaWxpLXBhcmFncmFwaDtcbiAgKi9cblxuICAvKlxuICBoMSxoMixoMyxoNCxoNSxoNiB7XG4gICAgZm9udC1mYW1pbHk6IFJvYm90bywgc2Fucy1zZXJpZjtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBsaW5lLWhlaWdodDogMS40O1xuICAgIGNvbG9yOiAkZGFya2dyZXk7XG4gICAgbWFyZ2luOiAwO1xuICB9XG4gIGgxe1xuICAgIGZvbnQtc2l6ZTogMjhweDtcbiAgfVxuXG4gIGgye1xuICAgIGZvbnQtc2l6ZTogMjBweDtcbiAgfVxuXG4gIGgze1xuICAgIGZvbnQtc2l6ZTogMThweDtcbiAgfVxuXG4gIGg0e1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgfVxuXG4gIGg1LGg2e1xuICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgfVxuXG4gIGF7XG4gICAgY29sb3I6ICRibHVlO1xuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgfVxuXG4gIHB7XG4gICAgZm9udC1zaXplOiBlbSgxNCk7XG4gICAgbWFyZ2luOiAwO1xuICAgIEBpbmNsdWRlIGJwKHRhYmxldCl7XG4gICAgICBmb250LXNpemU6IDFlbTtcbiAgICB9XG4gIH1cbiAgKi9cbn1cblxuLndwLWJsb2NrLWNvdmVyLmFsaWduZnVsbHtcbiAgcGFkZGluZzogMDtcbiAgLndwLWJsb2NrLWNvdmVyX19pbm5lci1jb250YWluZXJ7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cblxuXG5cbi5pcy1zdHlsZS1yZWQtYnV0dG9ue1xuXHRhe1xuICAgIGFwcGVhcmFuY2U6IG5vbmU7XG4gICAgLy8gYm9yZGVyOiAwO1xuICAgIC8vIGJhY2tncm91bmQtY29sb3I6ICRjb2xvci1yZWQ7XG4gICAgLy8gd2lkdGg6IDEwMCU7XG4gICAgLy8gcGFkZGluZzogMjFweCAzMHB4IDI1cHg7XG4gICAgLy8gdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIC8vIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IFxuICAgIC8vIGNvbG9yOiAkY29sb3Itd2hpdGU7XG4gICAgLy8gZm9udC13ZWlnaHQ6IGJvbGQ7XG4gICAgLy8gZm9udC1zaXplOiBlbSgxNik7XG4gICAgLy8gYm9yZGVyLXJhZGl1czogMDtcbiAgfVxuICBcbiAgLndwLWJsb2NrLWJ1dHRvbl9fbGlua3tcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItcmVkO1xuICAgIHBhZGRpbmc6IDA7XG4gIH1cbn1cblxuLndwLWJsb2NrLWdhbGxlcnkuaGFzLW5lc3RlZC1pbWFnZXMgZmlndXJlLndwLWJsb2NrLWltYWdlIGltZ3tcbiAgbWF4LXdpZHRoOiByZW0oMTAwKSFpbXBvcnRhbnQ7XG59XG4iLCJodG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuKixcbio6YmVmb3JlLFxuKjphZnRlciB7IC8qIEluaGVyaXQgYm94LXNpemluZyB0byBtYWtlIGl0IGVhc2llciB0byBjaGFuZ2UgdGhlIHByb3BlcnR5IGZvciBjb21wb25lbnRzIHRoYXQgbGV2ZXJhZ2Ugb3RoZXIgYmVoYXZpb3I7IHNlZSBodHRwczovL2Nzcy10cmlja3MuY29tL2luaGVyaXRpbmctYm94LXNpemluZy1wcm9iYWJseS1zbGlnaHRseS1iZXR0ZXItYmVzdC1wcmFjdGljZS8gKi9cbiAgYm94LXNpemluZzogaW5oZXJpdDtcbn1cblxuQGltcG9ydCBcImxpc3RzXCI7XG5AaW1wb3J0IFwidGFibGVzXCI7XG4iLCJ1bCwgb2wge1xuICBtYXJnaW46IDA7XG59XG5cbnVsIHtcbiAgbGlzdC1zdHlsZTogbm9uZSBvdXRzaWRlIG5vbmU7XG59XG5cbm9sIHtcbiAgbGlzdC1zdHlsZTogZGVjaW1hbDtcbn1cblxubGkgPiB1bCxcbmxpID4gb2wge1xuICBtYXJnaW4tYm90dG9tOiAwO1xuICBtYXJnaW4tbGVmdDogLjVlbTtcbn1cblxuZHQge1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuZGQge1xuICBtYXJnaW46IDAgMS41ZW0gMS41ZW07XG59IiwidGFibGUge1xuICBtYXJnaW46IDAgMCAxLjVlbTtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbi8vIFVzZSBmb3IgYWxsIHRhYmxlc1xuLnRhYmxlLXdyYXBwZXIge1xuICBvdmVyZmxvdy14OiBhdXRvO1xuICBtYXJnaW46IDAgMCAyMHB4O1xuICBvdmVyZmxvdy15OiBoaWRkZW47XG59XG5cbiIsImJ1dHRvbixcbmlucHV0W3R5cGU9XCJidXR0b25cIl0sXG5pbnB1dFt0eXBlPVwicmVzZXRcIl0sXG5pbnB1dFt0eXBlPVwic3VibWl0XCJdIHtcblx0Ym9yZGVyOiAxcHggc29saWQ7XG5cdGJvcmRlci1jb2xvcjogJGNvbG9yX19ib3JkZXItYnV0dG9uO1xuXHRib3JkZXItcmFkaXVzOiAzcHg7XG5cdGJhY2tncm91bmQ6ICRjb2xvcl9fYmFja2dyb3VuZC1idXR0b247XG5cdGNvbG9yOiByZ2JhKDAsIDAsIDAsIC44KTtcblx0QGluY2x1ZGUgZm9udC1zaXplKDAuNzUpO1xuXHRsaW5lLWhlaWdodDogMTtcblx0cGFkZGluZzogLjZlbSAxZW0gLjRlbTtcblxuXHQmOmhvdmVyIHtcblx0XHRib3JkZXItY29sb3I6ICRjb2xvcl9fYm9yZGVyLWJ1dHRvbi1ob3Zlcjtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAjRkYwMDExO1xuXHRcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblx0fVxuXG5cdCY6YWN0aXZlLFxuXHQmOmZvY3VzIHtcblx0XHRib3JkZXItY29sb3I6ICRjb2xvcl9fYm9yZGVyLWJ1dHRvbi1mb2N1cztcblx0fVxuXG5cdFxufVxuXG4uc2VhcmNoLWZpZWxkIHtcblx0Ym9yZGVyLXJhZGl1czogMCFpbXBvcnRhbnQ7XG5cdHBhZGRpbmctbGVmdDogMjFweCFpbXBvcnRhbnQ7XG5cdG1pbi1oZWlnaHQ6IDQ2cHghaW1wb3J0YW50O1xuXHRib3JkZXI6IDAhaW1wb3J0YW50O1xuXG5cdEBpbmNsdWRlIGJwKHRhYmxldCkge1xuXHRcdG1pbi13aWR0aDogMzIwcHg7XG5cdFx0XG5cdH1cbn1cblxuXG5cbi5yZWQtYnV0dG9uLCAuaXMtc3R5bGUtcmVkLWJ1dHRvbiAud3AtYmxvY2stYnV0dG9uX19saW5rLCAuc2VhcmNoLXN1Ym1pdHtcblx0XHRhcHBlYXJhbmNlOiBub25lO1xuXHRcdGJvcmRlcjogMDtcblx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkY29sb3ItcmVkIWltcG9ydGFudDs7XG5cdFx0dGV4dC1hbGlnbjogY2VudGVyO1xuXHRcdHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IFxuXHRcdGNvbG9yOiAkY29sb3Itd2hpdGUhaW1wb3J0YW50O1xuXHRcdGZvbnQtd2VpZ2h0OiBib2xkO1xuXHRcdGZvbnQtc2l6ZTogZW0oMTYpO1xuXHRcdGJvcmRlci1yYWRpdXM6IDA7XG5cdFx0bWluLXdpZHRoOiAyNDBweDtcblx0XHRtaW4taGVpZ2h0OiA0NnB4O1xuXHRcdHBhZGRpbmc6IDIxcHggMzBweCAyMXB4O1xuXHRcdHRyYW5zaXRpb246IDAuMnMgZWFzZS1vdXQ7XG5cdFx0Jjpob3ZlciB7XG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAjRkYwMDExIWltcG9ydGFudDtcblx0XHRcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcblx0XHR9XG5cdFx0XG5cdFx0Ji5wcm9kdWN0X19yZXF1ZXN0QnRuIHtcblx0XHRcdHdpZHRoOiAxMDAlO1xuXHRcdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0fVxuXHRcbn1cblxuLnJlZC1idXR0b24geyBcblx0YSB7XG5cdFx0QGV4dGVuZCAucmVkLWJ1dHRvbjtcdFx0XG5cdH1cblxuXHRcbn1cblxuaW5wdXRbdHlwZT1cInN1Ym1pdFwiXXtcblx0Ji5yZWQtYnV0dG9ue1xuXHRcdEBleHRlbmQgLnJlZC1idXR0b247XG5cdH1cdFxufVxuXG4uc2VhcmNoLWZvcm0ge1xuXHRkaXNwbGF5OiBmbGV4O1xuXHRtYXJnaW4tYm90dG9tOiByZW0oMzApO1xuXHRqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcblx0XG5cdC5zZWFyY2gtc3VibWl0IHtcblx0XHRtaW4td2lkdGg6IHJlbSgoMTM5KSk7XG5cdFx0Ym9yZGVyLXJhZGl1czogMDtcblx0XHRib3JkZXI6IDA7XG5cdH1cbn0iLCIvLyBSZW0gb3V0cHV0IHdpdGggcHggZmFsbGJhY2tcbkBtaXhpbiBmb250LXNpemUoJHNpemVWYWx1ZTogMSkge1xuXHRmb250LXNpemU6ICgkc2l6ZVZhbHVlICogMTYpICogMXB4O1xuXHRmb250LXNpemU6ICRzaXplVmFsdWUgKiAxcmVtO1xufVxuXG4vLyBDZW50ZXIgYmxvY2tcbkBtaXhpbiBjZW50ZXItYmxvY2sge1xuXHRkaXNwbGF5OiBibG9jaztcblx0bWFyZ2luLWxlZnQ6IGF1dG87XG5cdG1hcmdpbi1yaWdodDogYXV0bztcbn1cblxuLy8gQ2xlYXJmaXhcbkBtaXhpbiBjbGVhcmZpeCgpIHtcblx0Y29udGVudDogXCJcIjtcblx0ZGlzcGxheTogdGFibGU7XG5cdHRhYmxlLWxheW91dDogZml4ZWQ7XG59XG5cbi8vIENsZWFyIGFmdGVyIChub3QgYWxsIGNsZWFyZml4IG5lZWQgdGhpcyBhbHNvKVxuQG1peGluIGNsZWFyZml4LWFmdGVyKCkge1xuXHRjbGVhcjogYm90aDtcbn1cblxuLy8gQ2VudGVyIGJsb2NrXG5AbWl4aW4gY2VudGVyLWJsb2NrIHtcblx0ZGlzcGxheTogYmxvY2s7XG5cdG1hcmdpbi1sZWZ0OiBhdXRvO1xuXHRtYXJnaW4tcmlnaHQ6IGF1dG87XG59XG5cbi8vIENvbHVtbiB3aWR0aCB3aXRoIG1hcmdpblxuQG1peGluIGNvbHVtbi13aWR0aCgkbnVtYmVyQ29sdW1uczogMykge1xuXHR3aWR0aDogbWFwLWdldCgkY29sdW1ucywgJG51bWJlckNvbHVtbnMpIC0gKCAoICRjb2x1bW5zX19tYXJnaW4gKiAoICRudW1iZXJDb2x1bW5zIC0gMSApICkgLyAkbnVtYmVyQ29sdW1ucyApO1xufVxuIiwiXG4vLyBEZWZhdWx0IC0gMzIxIC0gNDAwXG5cbkBtaXhpbiBicCgkcG9pbnQpIHtcblxuICBAaWYgJHBvaW50ID09IHBob25leHhze1xuICAgIEBtZWRpYSAobWF4LXdpZHRoOiAzMjBweCkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG4gIEBpZiAkcG9pbnQgPT0gcGhvbmV4c2Rvd257XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDM2MHB4KSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cblxuICBAaWYgJHBvaW50ID09IHBob25leGx7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDQwMHB4KSB7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cblxuICBAaWYgJHBvaW50ID09IHBob25leGxkb3due1xuICAgIEBtZWRpYSAobWF4LXdpZHRoOiA0MTVweCkge1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG5cbiAgQGlmICRwb2ludCA9PSBwaG9uZXBvcnRyYWl0IHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNTY4cHgpe1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG5cbiAgQGlmICRwb2ludCA9PSBwaG9uZXBvcnRyYWl0T25seSB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDU2OHB4KSBhbmQgKG1heC13aWR0aDogNjcwcHgpe1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG5cbiAgQGlmICRwb2ludCA9PSBwaG9uZXBvcnRyYWl0eGxPbmx5IHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzIwcHgpIGFuZCAobWF4LXdpZHRoOiA3NjdweCl7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cblxuICBAZWxzZSBpZiAkcG9pbnQgPT0gdGFibGV0ZG93biB7XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDc2N3B4KXtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxuXG4gIEBlbHNlIGlmICRwb2ludCA9PSB0YWJsZXQge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCl7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cblxuICBAZWxzZSBpZiAkcG9pbnQgPT0gdGFibGV0bGFuZHNjYXBle1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCl7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cblxuICBAZWxzZSBpZiAkcG9pbnQgPT0gbGFwdG9weHMge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAxMjgwcHgpe1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG5cbiAgQGVsc2UgaWYgJHBvaW50ID09IGxhcHRvcHhzZG93biB7XG4gICAgQG1lZGlhIChtYXgtd2lkdGg6IDEyNzlweCl7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cblxuICBAZWxzZSBpZiAkcG9pbnQgPT0gbGFwdG9wIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTM2NnB4KXtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxuXG4gIEBlbHNlIGlmICRwb2ludCA9PSBsYXB0b3B4bCB7XG4gICAgQG1lZGlhIChtaW4td2lkdGg6IDE0NDBweCl7XG4gICAgICBAY29udGVudDtcbiAgICB9XG4gIH1cblxuICBAZWxzZSBpZiAkcG9pbnQgPT0gZGVza3RvcHhzIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTYwMHB4KXtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxuXG4gIEBlbHNlIGlmICRwb2ludCA9PSBkZXNrdG9wIHtcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogMTkyMHB4KXtcbiAgICAgIEBjb250ZW50O1xuICAgIH1cbiAgfVxuXG4gIEBlbHNlIGlmICRwb2ludCA9PSBkZXNrdG9weGwge1xuICAgIEBtZWRpYSAobWluLXdpZHRoOiAyNTAwcHgpe1xuICAgICAgQGNvbnRlbnQ7XG4gICAgfVxuICB9XG5cbn0iXX0= */
